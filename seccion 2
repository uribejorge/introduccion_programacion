# seccion introduccion a la programacion

## Editores de código para desarrollo web
- Visual Studio Code: un editor de código gratuito y de código abierto desarrollado por Microsoft. Es altamente personalizable y tiene una amplia gama de características, incluyendo soporte para HTML, CSS, JavaScript, PHP, Python, C++, y muchas otras.

- Sublime Text: un editor de código pago con una licencia perpetua. Es rápido y ligero, y tiene una amplia gama de características, incluyendo soporte para HTML, CSS, JavaScript, PHP, Python, C++, y muchas otras.

- Atom: un editor de código gratuito y de código abierto desarrollado por la comunidad. Es altamente personalizable y tiene una amplia gama de características, incluyendo soporte para HTML, CSS, JavaScript, PHP, Python, C++, y muchas otras.

- Notepad++: un editor de código gratuito y de código abierto desarrollado por la comunidad. Es rápido y ligero, y tiene una amplia gama de características, incluyendo soporte para HTML, CSS, JavaScript, PHP, Python, C++, y muchas otras.

- Brackets: un editor de código gratuito y de código abierto desarrollado por Adobe. Es altamente personalizable y tiene una amplia gama de características, incluyendo soporte para HTML, CSS, JavaScript, PHP, Python, C++, y muchas otras.

La elección del mejor editor de código para ti depende de tus necesidades y preferencias. Si eres un desarrollador web principiante, te recomiendo empezar con un editor de código gratuito, como Visual Studio Code, Sublime Text, Atom o Notepad++. Estos editores son todos fáciles de usar y tienen una amplia gama de características que pueden ayudarte a aprender desarrollo web.

## Visual Studio Code (VS Code)
Es un editor de código desarrollado por Microsoft. Se ha convertido en una de las herramientas más populares para la programación y el desarrollo de software debido a su versatilidad, rendimiento y amplia comunidad de usuarios y extensiones.

Algunas características destacadas de Visual Studio Code son:

Editor de código: VS Code ofrece un editor de código potente con resaltado de sintaxis, sugerencias inteligentes, autocompletado y muchas otras características útiles para facilitar la escritura y edición de código.

Depuración: Incluye herramientas de depuración integradas que permiten a los desarrolladores rastrear y corregir errores en su código de manera eficiente.

Integración con Git: Ofrece una sólida integración con sistemas de control de versiones, como Git, lo que facilita la gestión de cambios en el código y la colaboración en proyectos.

Extensiones: Una de las características más poderosas de VS Code es su capacidad para ser extendido mediante extensiones. Hay una amplia gama de extensiones disponibles en el mercado que agregan funcionalidades adicionales, como soporte para diferentes lenguajes de programación, herramientas de desarrollo específicas, temas visuales y más.

Terminal integrada: Proporciona una terminal integrada en la que los desarrolladores pueden ejecutar comandos y scripts directamente desde el IDE.

Vista en pantalla dividida: Permite dividir la ventana del editor en múltiples paneles para trabajar en varios archivos o secciones de código al mismo tiempo.

Integración en la nube: VS Code se puede integrar con servicios en la nube y entornos de desarrollo remoto, lo que permite a los desarrolladores trabajar en proyectos alojados en servidores remotos.

Soporte para múltiples lenguajes: Aunque VS Code es muy utilizado para desarrollo web, también ofrece soporte para una amplia variedad de lenguajes de programación y tecnologías.

Personalización: Los usuarios pueden personalizar el aspecto y la funcionalidad de VS Code según sus preferencias, eligiendo temas visuales, atajos de teclado y más.

Gratuito y de código abierto: Visual Studio Code es gratuito y de código abierto, lo que significa que los desarrolladores pueden acceder al código fuente, contribuir con mejoras y personalizarlo según sus necesidades.

https://code.visualstudio.com/

## HTML5
HTML5 es la quinta versión del lenguaje de marcado de hipertexto (HTML), que se utiliza para estructurar y presentar contenido en la web. HTML es el lenguaje fundamental utilizado para crear páginas web y definir su estructura y contenido. HTML5 trajo consigo una serie de mejoras y nuevas características en comparación con las versiones anteriores de HTML, lo que lo convirtió en un estándar ampliamente adoptado para el desarrollo de sitios web y aplicaciones web.

Algunas de las características y mejoras más importantes de HTML5 incluyen:

- Elementos semánticos: HTML5 introduce nuevos elementos semánticos que permiten a los desarrolladores etiquetar el contenido de una manera más significativa. Esto ayuda a los motores de búsqueda y a los navegadores a comprender mejor la estructura del contenido y su contexto.

- Compatibilidad multimedia mejorada: HTML5 incluye elementos como audio y video que permiten la incorporación de contenido multimedia sin necesidad de complementos o tecnologías externas, como Adobe Flash.

- Canvas y gráficos: HTML5 presenta el elemento canvas, que permite a los desarrolladores dibujar gráficos, animaciones y otros elementos visuales directamente en la página utilizando JavaScript.

- API de arrastrar y soltar: HTML5 introdujo la posibilidad de arrastrar y soltar elementos en una página web, lo que facilita la implementación de interacciones intuitivas.

- WebSockets: Esta tecnología permite la comunicación bidireccional en tiempo real entre un navegador y un servidor, lo que es especialmente útil para aplicaciones en tiempo real como chats y juegos multijugador.

- Almacenamiento local: HTML5 proporciona métodos para almacenar datos en el lado del cliente, como el almacenamiento local y las bases de datos en el navegador, lo que permite a las aplicaciones funcionar sin conexión o de manera más eficiente.

- Mejoras en formularios: HTML5 simplifica la creación de formularios web y agrega nuevos tipos de campos, validaciones y características de autocompletado.

- Geolocalización: HTML5 permite a las aplicaciones web acceder a la ubicación geográfica del dispositivo del usuario, lo que es útil para servicios basados en la ubicación.

- Accesibilidad mejorada: HTML5 promueve la creación de contenido web más accesible al proporcionar atributos y elementos diseñados para mejorar la experiencia de los usuarios con discapacidades.

- Compatibilidad móvil: HTML5 se diseñó teniendo en cuenta los dispositivos móviles, lo que facilita la creación de sitios web y aplicaciones que funcionen bien en pantallas de diferentes tamaños y dispositivos móviles.

## Elemento HTML
Un elemento HTML es una etiqueta que se utiliza para estructurar el contenido de una página web. Los elementos HTML se utilizan para crear elementos de contenido, como párrafos, encabezados, tablas, imágenes y enlaces.

- Cada elemento HTML tiene un nombre y una apertura y cierre de etiqueta. El nombre del elemento es el texto que aparece entre los símbolos de menor y mayor (< y >). La apertura de la etiqueta se llama etiqueta de apertura y la cierre de la etiqueta se llama etiqueta de cierre.

Por ejemplo, el elemento HTML para un párrafo es <p>. La etiqueta de apertura es <p> y la etiqueta de cierre es </p>.

Los elementos HTML se pueden anidar, lo que significa que se pueden colocar uno dentro del otro. Esto permite crear estructuras complejas de contenido web.

Los elementos HTML son una parte importante del lenguaje HTML. Se utilizan para crear la estructura de una página web y para mostrar el contenido de una página web.

## Anatomía de un elemento HTML
html

### Anidamiento de elementos HTM
El anidamiento de elementos HTML es el proceso de colocar un elemento HTML dentro de otro elemento HTML. Este es un concepto importante en el lenguaje HTML, ya que permite crear estructuras complejas de contenido web.

Para anidar elementos HTML, simplemente abre el elemento padre y luego abre el elemento hijo dentro del elemento padre. Cuando hayas terminado de usar el elemento hijo, ciérralo.

Por ejemplo, el siguiente código muestra cómo anidar un elemento p dentro de un elemento div:

```

<div>
  <p>Este es un párrafo.</p>
</div>

```

El elemento div es el elemento padre y el elemento p es el elemento hijo. El elemento p se encuentra dentro del elemento div.

Puedes anidar elementos HTML de cualquier manera que desees. Sin embargo, es importante tener en cuenta que la estructura de tu contenido web debe ser lógica y fácil de entender.

El anidamiento de elementos HTML puede ser una herramienta poderosa para crear estructuras complejas de contenido web. Sin embargo, es importante usarlo de manera responsable.

Comentarios HTML
Los comentarios HTML son una forma de agregar notas al código HTML que no se mostrarán en la página web. Se pueden usar para proporcionar información sobre el código, explicar el propósito de una sección de código o simplemente para hacer anotaciones.

Los comentarios HTML se escriben entre el símbolo de signo menos (-) y el signo mayor (>). Pueden ser una línea o múltiples líneas.

Un comentario de una sola línea se vería así:

<!-- Este es un comentario de una sola línea -->

Un comentario de varias líneas se vería así:

<!-- Este es un comentario de varias líneas
que se extiende a varias líneas -->

Estructura básica de un documento HTML5
La estructura básica de un documento HTML5 consta de las etiquetas esenciales que proporcionan la base para crear una página web. Aquí tienes un ejemplo de cómo se vería la estructura básica:

```

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Título de la Página</title>
</head>
<body>
    <h1>Encabezado Principal</h1>
    <p>Este es un párrafo de ejemplo.</p>
</body>
</html>

```

Explicación:

<!DOCTYPE html>: Declaración del tipo de documento, que indica que estás utilizando HTML5.
<html>: Elemento raíz que engloba todo el contenido HTML.
<head>: Encabezado del documento, contiene metadatos y enlaces a recursos.
<meta charset="UTF-8">: Define la codificación de caracteres del documento (UTF-8 es comúnmente utilizado y admite caracteres de diferentes idiomas).
<meta name="viewport" content="width=device-width, initial-scale=1.0">: Define la configuración de la vista en dispositivos móviles, permitiendo un diseño adaptable (responsivo) ajustado al ancho del dispositivo.
<title>: Define el título de la página que se muestra en la barra de título del navegador.
<body>: Contiene el contenido visible de la página.
<h1>: Encabezado de nivel 1, utilizado para títulos importantes.
<p>: Párrafo, para insertar texto y contenido.
<!DOCTYPE html>
La declaración de tipo de documento (DOCTYPE) es una declaración de texto que indica al navegador cómo interpretar el código HTML de una página web. La declaración DOCTYPE debe ser la primera línea de código en un documento HTML.

Hay muchos tipos diferentes de declaraciones DOCTYPE, pero la más común es la siguiente:

<!DOCTYPE html>

Esta declaración DOCTYPE indica al navegador que la página web está escrita en HTML5, la última versión del lenguaje HTML.

La declaración DOCTYPE es importante porque ayuda a garantizar que la página web se muestre correctamente en todos los navegadores. Sin una declaración DOCTYPE válida, el navegador puede no poder interpretar el código HTML de la página web correctamente y la página puede no mostrarse correctamente.

<html>
La etiqueta HTML <html> es la etiqueta raíz de un documento HTML. Marca el comienzo y el final del documento HTML.

La etiqueta <html> debe ser la primera etiqueta en un documento HTML y debe cerrarse con la etiqueta </html>.

La etiqueta <html> no tiene ningún contenido, pero puede contener las etiquetas <head> y <body>.

<head>
La etiqueta HTML <head> es una sección de un documento HTML que contiene información sobre el documento, como el título, las palabras clave y la descripción. La etiqueta <head> debe ser la primera etiqueta en un documento HTML y debe cerrarse con la etiqueta </head>.

La etiqueta <head> no contiene ningún contenido, pero puede contener las siguientes etiquetas:

<title>: La etiqueta <title> contiene el título del documento HTML. El título se mostrará en la ventana del navegador y en los resultados de búsqueda.
<meta>: La etiqueta <meta> se utiliza para agregar información meta al documento HTML. La información meta no se muestra en la página web, pero se utiliza por los motores de búsqueda y otros programas.
<link>: La etiqueta <link> se utiliza para enlazar el documento HTML a otros recursos, como archivos CSS, archivos JavaScript y archivos de imágenes.
<script>: La etiqueta <script> se utiliza para insertar código JavaScript en el documento HTML. El código JavaScript se ejecuta en el navegador del usuario y puede utilizarse para agregar funcionalidad a la página web.
La etiqueta <head> es importante porque ayuda a estructurar un documento HTML y a proporcionar información sobre el documento al navegador.

<body>
La etiqueta HTML <body> es una sección de un documento HTML que contiene el contenido visible de la página web, como el texto, las imágenes y los formularios. La etiqueta <body> debe estar entre las etiquetas <html> y </html>.

Etiquetas <meta>
Las etiquetas meta HTML son etiquetas HTML que proporcionan información adicional sobre una página web. Se utilizan para ayudar a los motores de búsqueda a entender el contenido de una página web y para mostrar la página web en los resultados de búsqueda.

Las etiquetas meta HTML se suelen colocar en la sección <head> de una página web. La sección <head> es la parte de una página web que no se muestra en el navegador web.

Las etiquetas meta HTML se utilizan para proporcionar información sobre una variedad de temas, como el título de la página web, la descripción de la página web, las palabras clave de la página web, la fecha de publicación de la página web, el autor de la página web, y la licencia de la página web.

Las etiquetas meta HTML no son visibles para los usuarios, pero pueden ser muy útiles para los motores de búsqueda y para los usuarios que quieren saber más sobre una página web.

Aquí hay algunos ejemplos de etiquetas meta HTML:

title
La etiqueta <title> se utiliza para especificar el título de una página web. El título se muestra en la barra de título del navegador web y en los resultados de búsqueda.

<title>Esta es la página web de ejemplo</title>

description
La etiqueta <meta name="description" content=""> se utiliza para especificar una descripción de una página web. La descripción se muestra en los resultados de búsqueda.

<meta name="description" content="Esta página web es sobre el aprendizaje automático. Se explica qué es el aprendizaje automático, cómo funciona y cómo se puede utilizar.">


keywords
La etiqueta <meta name="keywords" content=""> se utiliza para especificar las palabras clave de una página web. Las palabras clave se utilizan por los motores de búsqueda para encontrar páginas web.

<meta name="keywords" content="aprendizaje automático, inteligencia artificial, machine learning">

publication_date
La etiqueta <meta name="publication_date" content=""> se utiliza para especificar la fecha de publicación de una página web. La fecha de publicación se utiliza por los motores de búsqueda para ordenar las páginas web en los resultados de búsqueda.

<meta name="publication_date" content="2023-03-08">

author
La etiqueta <meta name="author" content=""> se utiliza para especificar el autor de una página web. El autor se utiliza por los motores de búsqueda para mostrar información sobre el autor de una página web en los resultados de búsqueda.

<meta name="author" content="Jhon Valencia">

license
La etiqueta <meta name="license" content=""> se utiliza para especificar la licencia de una página web. La licencia se utiliza para informar a los usuarios sobre los derechos de autor de una página web.

<meta name="license" content="Creative Commons Attribution-ShareAlike 4.0 International License">

viewport
El viewport es el área de una página web que se muestra en el navegador. Se puede definir como el área rectangular dentro del navegador que contiene el contenido de la página web. El viewport se puede ajustar en tamaño y posición, y se puede utilizar para mejorar la experiencia de visualización de la página web en diferentes dispositivos. Por ejemplo, la siguiente etiqueta meta HTML viewport establece el viewport en 1000 píxeles de ancho y una escala inicial de 1.5:

<meta name="viewport" content="width=1000, initial-scale=1.5">

charset
La etiqueta <meta charset="UTF-8"> es una etiqueta HTML que especifica la codificación de caracteres para el documento HTML. Le dice al navegador cómo interpretar el texto en la página para que se muestre correctamente. El atributo charset especifica la codificación de caracteres a utilizar. La codificación de caracteres más común es UTF-8, que puede representar casi todos los caracteres y símbolos del mundo.

<meta charset="UTF-8">

Las etiquetas meta HTML son una parte importante del lenguaje HTML. Se utilizan para proporcionar información adicional sobre una página web que puede ser útil para los motores de búsqueda y para los usuarios.

Etiquetas HTML
Headings
Los encabezados HTML se utilizan para definir la estructura de una página web. También son utilizados por los motores de búsqueda para indexar el contenido de una página. Hay seis niveles de encabezados en HTML, desde el más importante (<h1>) hasta el menos importante (<h6>).

<h1> es el encabezado más importante y debe ser utilizado para el título principal de la página.
<h2> es el siguiente encabezado más importante y debe ser utilizado para secciones principales de la página.
<h3> se usa para secciones menos importantes de la página.
<h4> se usa para secciones aún menos importantes de la página.
<h5> se usa para secciones muy pequeñas de la página.
<h6> es el encabezado menos importante y debe ser utilizado para secciones muy pequeñas de la página.
Es importante utilizar encabezados de forma consistente en toda una página. Por ejemplo, si utilizas <h2> para una sección al principio de la página, debes utilizar <h2> para todas las demás secciones de la misma importancia. Esto ayudará a crear una estructura consistente para la página y hará que sea más fácil para los usuarios escanear y comprender el contenido.
También puedes usar CSS para dar formato a los encabezados de tu página. Por ejemplo, puedes cambiar el tamaño de la fuente, el color y el peso de los encabezados. Esto puede ayudar a que los encabezados destaquen y hagan que la página sea más atractiva visualmente.

Aquí hay un ejemplo de cómo utilizar encabezados HTML:

<h1>Este es el título principal de la página</h1>
<h2>Esta es una sección principal de la página</h2>
<h3>Esta es una sección menos importante de la página</h3>
<h4>Esta es una sección aún menos importante de la página</h4>
<h5>Esta es una sección muy pequeña de la página</h5>
<h6>Esta es la sección menos importante de la página</h6>

<p>
Un párrafo HTML es un bloque de texto que está rodeado por etiquetas <p> y </p>. Los párrafos se utilizan para organizar el texto en una página web.

La etiqueta <p> es un elemento de bloque, lo que significa que ocupa una línea completa en la página web. La etiqueta </p> es la etiqueta de cierre para la etiqueta <p>.

Aquí hay un ejemplo de un párrafo HTML:

<p>Este es un párrafo HTML.</p>

El texto dentro de las etiquetas <p> se mostrará como un párrafo en la página web.

Puedes usar párrafos HTML para organizar el texto en tu página web. Por ejemplo, puedes usar párrafos para crear secciones diferentes en tu página web o para separar diferentes bloques de texto.

También puedes usar párrafos para agregar espaciado entre el texto en tu página web. Por ejemplo, puedes agregar un párrafo vacío entre diferentes secciones de tu página web para crear una separación visual.

<ol><ul>
Las listas en HTML se pueden usar para enumerar elementos. Hay dos tipos de listas en HTML: listas ordenadas (<ol>) y listas no ordenadas (<ul>).

Las listas ordenadas se utilizan para enumerar elementos en un orden específico. Los elementos de una lista ordenada se numeran automáticamente, empezando por 1. Las listas no ordenadas se utilizan para enumerar elementos sin un orden específico. Los elementos de una lista no ordenada se muestran con viñetas. Para crear una lista en HTML, debes usar las etiquetas <ol> o <ul>. A continuación, debes insertar los elementos de la lista entre las etiquetas <li>.

Aquí hay un ejemplo de una lista ordenada:

<ol>
  <li>Elemento 1</li>
  <li>Elemento 2</li>
  <li>Elemento 3</li>
</ol>

Lista no ordenada

<ul>
  <li>Elemento 1</li>
  <li>Elemento 2</li>
  <li>Elemento 3</li>
</ul>

Puedes usar listas ordenadas y listas no ordenadas para organizar el texto y la información en tus páginas web.

<a>
Los enlaces HTML son una forma de conectar una página web a otra página web o a un recurso externo, como una imagen o un archivo PDF. Se utilizan para crear hipervínculos que los usuarios pueden hacer clic para navegar a otros lugares.

Los enlaces HTML se definen usando la etiqueta <a>. La etiqueta <a> tiene dos atributos principales:

href: El atributo href indica la URL de la página web o el recurso al que se conecta el enlace. target: El atributo target indica en qué ventana o pestaña se abrirá el enlace cuando se hace clic en él. Aquí hay un ejemplo de un enlace HTML simple:

<a href="https://www.google.com">Google</a>

Este enlace enlazará a la página web de Google cuando el usuario haga clic en él.

También puedes usar el atributo target para indicar en qué ventana o pestaña se abrirá el enlace. Por ejemplo, el siguiente enlace abrirá el enlace en una nueva pestaña:

<a href="https://www.google.com" target="_blank">Google</a>

Puedes usar enlaces HTML para crear una variedad de hipervínculos, incluyendo:

Enlaces a otras páginas web
Enlaces a recursos externos, como imágenes o archivos PDF
Enlaces a secciones diferentes de la misma página web
Enlaces a marcadores en la misma página web
Los enlaces HTML son una forma importante de crear una navegación fluida y fácil de usar en tus páginas web.

<div>
La etiqueta <div> en HTML se utiliza para agrupar bloques de contenido dentro de un elemento contenedor genérico. Algunas características clave de <div>:

Es un contenedor genérico para cualquier tipo de contenido.

No tiene ningún significado semántico por sí solo. Su único propósito es agrupar contenido.

Se utiliza comúnmente para aplicar estilos de diseño CSS a grupos de elementos.

Puede agrupar otros elementos en bloque como párrafos, encabezados, imágenes, tablas, formularios, etc.

Puede tener clases o IDs para referirse a ellos desde hojas de estilo.

No afecta el flujo natural del documento, pero permite diseñar la maquetación.

Útil para estructurar secciones grandes de contenido antes de aplicar CSS.

<div>
  <h1>Título de la página</h1>
</div>

Si se le da significado semántico, deben preferirse otros elementos como <header>, <footer>, <section>.

<strong>
La etiqueta HTML <strong> se utiliza para resaltar texto que es importante o que debe leerse cuidadosamente. El texto dentro de la etiqueta <strong> suele aparecer en negrita, pero el estilo real puede variar en función del navegador o el lector de pantalla que se esté utilizando.

Aquí hay un ejemplo de cómo utilizar la etiqueta <strong>:

<p>This is a <strong>paragraph</strong> that is important.</p>

En este ejemplo, el texto "Este es un párrafo" aparecerá en negrita.

La etiqueta <strong> no debe utilizarse para resaltar texto que no es importante. En su lugar, debe utilizarse para resaltar texto que es clave para la comprensión del contenido de la página.

Aquí hay algunos ejemplos de texto que puede resaltarse con la etiqueta <strong>:

Títulos
Subtítulos
Palabras clave
Frases importantes
Advertencia
Aviso
Precaución
La etiqueta <strong> es una herramienta útil para resaltar texto que es importante o que debe leerse cuidadosamente. Al utilizar esta etiqueta correctamente, puede mejorar la accesibilidad y la claridad de su contenido web.

<br>
La etiqueta HTML <br> se utiliza para insertar un salto de línea en el texto. El texto después de la etiqueta <br> aparecerá en una nueva línea.

Aquí hay un ejemplo de cómo utilizar la etiqueta <br>:

<p>This is a paragraph.<br>This is a new line.</p>

En este ejemplo, el texto "Este es un párrafo" aparecerá en una línea, y el texto "Esta es una nueva línea" aparecerá en la línea siguiente.

La etiqueta <br> no debe utilizarse para insertar espacios entre líneas. En su lugar, debe utilizarse para insertar nuevas líneas en el texto.

Aquí hay algunos ejemplos de cómo utilizar la etiqueta <br>:

Para insertar una nueva línea en un párrafo
Para insertar una nueva línea en una lista
Para insertar una nueva línea en una tabla
Para insertar una nueva línea en un formulario
La etiqueta <br> es una herramienta útil para insertar nuevas líneas en el texto. Al utilizar esta etiqueta correctamente, puede mejorar la claridad y la legibilidad de su contenido web.

<span>
La etiqueta HTML <span> es un contenedor genérico que se utiliza para agrupar elementos de texto o de contenido. Se puede utilizar para aplicar estilos a un grupo de elementos, o para compartir atributos como lang.

El elemento <span> no tiene ningún significado semántico inherente, pero se puede utilizar con otros elementos semánticos para proporcionar información adicional. Por ejemplo, se puede utilizar para agregar un título a un elemento <img> o para especificar el idioma de un elemento <p>.

El elemento <span> es un elemento en línea, lo que significa que se representará en la misma línea que el texto que lo rodea.

Aquí hay un ejemplo de cómo utilizar la etiqueta <span> para aplicar estilos a un grupo de elementos:

<p>This is a paragraph. <span style="color: red;">This text is red.</span></p>

<i>
La etiqueta HTML <i> se utiliza para representar texto en cursiva. El texto dentro de la etiqueta <i> suele aparecer en cursiva, pero el estilo real puede variar en función del navegador o el lector de pantalla que se esté utilizando.

Aquí hay un ejemplo de cómo utilizar la etiqueta <i>:

<p>This is a <i>paragraph</i> that is in italics.</p>

En este ejemplo, el texto "Este es un párrafo" aparecerá en cursiva.

La etiqueta <i> no debe utilizarse para representar texto que no está en cursiva. En su lugar, debe utilizarse para representar texto que es clave para la comprensión del contenido de la página.

Aquí hay algunos ejemplos de texto que puede representarse en cursiva con la etiqueta <i>:

Títulos
Subtítulos
Palabras clave
Frases importantes
Advertencia
Aviso
Precaución
La etiqueta <i> es una herramienta útil para representar texto en cursiva. Al utilizar esta etiqueta correctamente, puede mejorar la accesibilidad y la claridad de su contenido web.

<u>
La etiqueta HTML <u> se utiliza para representar texto subrayado. El texto dentro de la etiqueta <u> suele aparecer subrayado, pero el estilo real puede variar en función del navegador o el lector de pantalla que se esté utilizando.

Aquí hay un ejemplo de cómo utilizar la etiqueta <u>:

<p>This is a <u>paragraph</u> that is underlined.</p>

En este ejemplo, el texto "Este es un párrafo" aparecerá subrayado.

La etiqueta <u> no debe utilizarse para representar texto que no está subrayado. En su lugar, debe utilizarse para representar texto que es clave para la comprensión del contenido de la página.

Aquí hay algunos ejemplos de texto que puede representarse subrayado con la etiqueta <u>:

Títulos
Subtítulos
Palabras clave
Frases importantes
Advertencia
Aviso
Precaución
La etiqueta <u> es una herramienta útil para representar texto subrayado. Al utilizar esta etiqueta correctamente, puede mejorar la accesibilidad y la claridad de su contenido web.

Sin embargo, actualmente se recomienda utilizar la etiqueta <span> con el atributo style="text-decoration:underline" en su lugar, ya que la etiqueta <u> no es semánticamente significativa.

Etiquetas semánticas HTML
Las etiquetas semánticas HTML son etiquetas de HTML que se utilizan para describir el significado del contenido de una página web. Esto ayuda a los motores de búsqueda a comprender mejor el contenido de la página y a los usuarios a navegar por ella.

Algunas de las etiquetas semánticas HTML más comunes incluyen:

<header>
La etiqueta HTML <header> se utiliza para etiquetar el encabezado de una página web. El encabezado suele contener información importante sobre la página web, como el título, el logotipo, el menú de navegación y los enlaces a las redes sociales.

La etiqueta <header> no es un elemento de sección, por lo que no introduce una nueva sección en la estructura de la página. Sin embargo, se puede utilizar para agrupar elementos de encabezado, como el título, el logotipo y el menú de navegación.

La etiqueta <header> tiene los siguientes atributos:

align: Este atributo se utiliza para alinear el encabezado horizontalmente. Los valores posibles son left, center y right.
bgcolor: Este atributo se utiliza para establecer el color de fondo del encabezado.
width: Este atributo se utiliza para establecer el ancho del encabezado.
Aquí hay un ejemplo de un encabezado HTML simple:

<header>
  <h1>Este es el título de la página</h1>
  <img src="logo.png" alt="Logotipo de la empresa">
  <nav>
    <a href="#">Inicio</a>
    <a href="#">Sobre nosotros</a>
    <a href="#">Contacto</a>
  </nav>
</header>

<main>
La etiqueta HTML <main> se utiliza para etiquetar el contenido principal de una página web. El contenido principal es el contenido que es más importante para el tema de la página web.

La etiqueta <main> solo puede aparecer una vez en una página web. Su contenido no debe incluir elementos como encabezados, pies de página, formularios de búsqueda, enlaces de navegación, etc., a menos que sean el contenido principal de la página web.

La etiqueta <main> no tiene atributos específicos. Sin embargo, se pueden utilizar atributos globales como id, class, style, title, etc.

A continuación se enumeran algunos atributos globales que se pueden utilizar con la etiqueta <main>:

id: Este atributo se utiliza para dar un id único al contenido principal. El id se puede utilizar para hacer referencia al contenido principal en CSS o JavaScript. class: Este atributo se utiliza para dar una clase al contenido principal. La clase se puede utilizar para aplicar estilos CSS al contenido principal. style: Este atributo se utiliza para establecer estilos CSS para el contenido principal. title: Este atributo se utiliza para establecer un título para el contenido principal. El título se muestra en la barra de título del navegador cuando el usuario pasa el cursor sobre el contenido principal. Es importante tener en cuenta que los atributos globales no son específicos de la etiqueta <main>. Se pueden utilizar con cualquier elemento HTML.

Aquí hay un ejemplo de un contenido principal HTML simple:

<main>
  <h1>Este es el título de la página</h1>
  <p>Este es el contenido principal de la página.</p>
</main>

Este contenido principal contiene un título y un párrafo. El título se muestra en la parte superior del contenido principal y el párrafo se muestra debajo del título.

Puedes usar la etiqueta <main> para crear un contenido principal personalizado para tus páginas web. El contenido principal puede contener cualquier elemento HTML que desees, pero es importante que el contenido del contenido principal sea relevante para el tema de la página web.

<aside>
La etiqueta HTML <aside> se utiliza para etiquetar contenido que es complementario al contenido principal de una página web. El contenido de un aside no es esencial para la comprensión de la página web, pero puede proporcionar información adicional o relevante.

El contenido de un aside puede ser texto, imágenes, vídeos, u otros elementos HTML. Se puede colocar en cualquier parte de la página web, pero se suele colocar a los lados de la página, o en una barra lateral.

La etiqueta <aside> no tiene atributos específicos. Sin embargo, se pueden utilizar atributos globales como id, class, style, title, etc.

A continuación se enumeran algunos atributos globales que se pueden utilizar con la etiqueta <aside>:

id: Este atributo se utiliza para dar un id único al aside. El id se puede utilizar para hacer referencia al aside en CSS o JavaScript. class: Este atributo se utiliza para dar una clase al aside. La clase se puede utilizar para aplicar estilos CSS al aside. style: Este atributo se utiliza para establecer estilos CSS para el aside. title: Este atributo se utiliza para establecer un título para el aside. El título se muestra en la barra de título del navegador cuando el usuario pasa el cursor sobre el aside. Es importante tener en cuenta que los atributos globales no son específicos de la etiqueta <aside>. Se pueden utilizar con cualquier elemento HTML.

Aquí hay un ejemplo de un aside HTML simple:

<aside>
  <h3>Este es un aside</h3>
  <p>Este es el contenido del aside.</p>
</aside>

Este aside contiene un título y un párrafo. El título se muestra en la parte superior del aside y el párrafo se muestra debajo del título.

Puedes usar la etiqueta <aside> para crear asides personalizados para tus páginas web. Los asides pueden contener cualquier elemento HTML que desees, pero es importante que el contenido del aside sea relevante para el contenido principal de la página web.

<footer>
La etiqueta HTML <footer> se utiliza para etiquetar el pie de página de una página web. El pie de página suele contener información que es menos importante que el contenido principal de la página web, pero que puede ser útil para los usuarios, como los derechos de autor, los enlaces a las redes sociales, o la información de contacto.

El contenido del pie de página puede ser texto, imágenes, vídeos, u otros elementos HTML. Se suele colocar en la parte inferior de la página web.

La etiqueta <footer> no tiene atributos específicos. Sin embargo, se pueden utilizar atributos globales como id, class, style, title, etc.

A continuación se enumeran algunos atributos globales que se pueden utilizar con la etiqueta <footer>:

id: Este atributo se utiliza para dar un id único al pie de página. El id se puede utilizar para hacer referencia al pie de página en CSS o JavaScript. class: Este atributo se utiliza para dar una clase al pie de página. La clase se puede utilizar para aplicar estilos CSS al pie de página. style: Este atributo se utiliza para establecer estilos CSS para el pie de página. title: Este atributo se utiliza para establecer un título para el pie de página. El título se muestra en la barra de título del navegador cuando el usuario pasa el cursor sobre el pie de página. Es importante tener en cuenta que los atributos globales no son específicos de la etiqueta <footer>. Se pueden utilizar con cualquier elemento HTML.

Aquí hay un ejemplo de un pie de página HTML simple:

<footer>
  <p>Este es el pie de página de la página web.</p>
  <p>Copyright © 2023, My Website. Todos los derechos reservados.</p>
</footer>

Este pie de página contiene un párrafo y un enlace. El párrafo se muestra en la parte superior del pie de página y el enlace se muestra debajo del párrafo.

Puedes usar la etiqueta <footer> para crear pies de página personalizados para tus páginas web. Los pies de página pueden contener cualquier elemento HTML que desees, pero es importante que el contenido del pie de página sea relevante para el contenido principal de la página web.

<nav>
La etiqueta HTML <nav> se utiliza para etiquetar el menú de navegación de una página web. El menú de navegación suele contener enlaces a otras páginas web o secciones de la misma página web.

El contenido del menú de navegación puede ser texto, imágenes, vídeos, u otros elementos HTML. Se suele colocar en la parte superior o lateral de la página web.

La etiqueta <nav> no tiene atributos específicos. Sin embargo, se pueden utilizar atributos globales como id, class, style, title, etc.

A continuación se enumeran algunos atributos globales que se pueden utilizar con la etiqueta <nav>:

id: Este atributo se utiliza para dar un id único al menú de navegación. El id se puede utilizar para hacer referencia al menú de navegación en CSS o JavaScript.
class: Este atributo se utiliza para dar una clase al menú de navegación. La clase se puede utilizar para aplicar estilos CSS al menú de navegación.
style: Este atributo se utiliza para establecer estilos CSS para el menú de navegación.
title: Este atributo se utiliza para establecer un título para el menú de navegación. El título se muestra en la barra de título del navegador cuando el usuario pasa el cursor sobre el menú de navegación.
Es importante tener en cuenta que los atributos globales no son específicos de la etiqueta <nav>. Se pueden utilizar con cualquier elemento HTML.

Aquí hay un ejemplo de un menú de navegación HTML simple:

<nav>
  <ul>
    <li><a href="#">Inicio</a></li>
    <li><a href="#">Sobre nosotros</a></li>
    <li><a href="#">Contacto</a></li>
  </ul>
</nav>

Este menú de navegación contiene tres enlaces. Los enlaces se muestran en una lista ordenada.

Puedes usar la etiqueta <nav> para crear menús de navegación personalizados para tus páginas web. Los menús de navegación pueden contener cualquier elemento HTML que desees, pero es importante que el contenido del menú de navegación sea relevante para el contenido principal de la página web.

<article>
La etiqueta HTML <article> se utiliza para etiquetar un artículo independiente, como un artículo de blog o una noticia. Un artículo puede contener texto, imágenes, vídeos, u otros elementos HTML.

La etiqueta <article> no tiene atributos específicos. Sin embargo, se pueden utilizar atributos globales como id, class, style, title, etc.

A continuación se enumeran algunos atributos globales que se pueden utilizar con la etiqueta <article>:

id: Este atributo se utiliza para dar un id único al artículo. El id se puede utilizar para hacer referencia al artículo en CSS o JavaScript.

class: Este atributo se utiliza para dar una clase al artículo. La clase se puede utilizar para aplicar estilos CSS al artículo.
style: Este atributo se utiliza para establecer estilos CSS para el artículo.
title: Este atributo se utiliza para establecer un título para el artículo. El título se muestra en la barra de título del navegador cuando el usuario pasa el cursor sobre el artículo.
Es importante tener en cuenta que los atributos globales no son específicos de la etiqueta <article>. Se pueden utilizar con cualquier elemento HTML.
Aquí hay un ejemplo de un artículo HTML simple:

<article>
  <h1>Este es un artículo</h1>
  <p>Este es el contenido del artículo.</p>
  <img src="image.jpg" alt="Imagen del artículo">
</article>

Este artículo contiene un título, un párrafo y una imagen. El título se muestra en la parte superior del artículo y el párrafo se muestra debajo del título. La imagen se muestra debajo del párrafo.

Puedes usar la etiqueta <article> para crear artículos personalizados para tus páginas web. Los artículos pueden contener cualquier elemento HTML que desees, pero es importante que el contenido del artículo sea relevante para el contenido principal de la página web.

<section>
La etiqueta HTML <section> se utiliza para etiquetar una sección de contenido en una página web. Las secciones pueden contener texto, imágenes, vídeos, u otros elementos HTML.

La etiqueta <section> no tiene atributos específicos. Sin embargo, se pueden utilizar atributos globales como id, class, style, title, etc.

A continuación se enumeran algunos atributos globales que se pueden utilizar con la etiqueta <section>:

id: Este atributo se utiliza para dar un id único a la sección. El id se puede utilizar para hacer referencia a la sección en CSS o JavaScript. class: Este atributo se utiliza para dar una clase a la sección. La clase se puede utilizar para aplicar estilos CSS a la sección. style: Este atributo se utiliza para establecer estilos CSS para la sección. title: Este atributo se utiliza para establecer un título para la sección. El título se muestra en la barra de título del navegador cuando el usuario pasa el cursor sobre la sección. Es importante tener en cuenta que los atributos globales no son específicos de la etiqueta <section>. Se pueden utilizar con cualquier elemento HTML.

Aquí hay un ejemplo de una sección HTML simple:

<section>
  <h2>Esta es una sección</h2>
  <p>Este es el contenido de la sección.</p>
</section>

Esta sección contiene un título y un párrafo. El título se muestra en la parte superior de la sección y el párrafo se muestra debajo del título.

Puedes usar la etiqueta <section> para crear secciones personalizadas para tus páginas web. Las secciones pueden contener cualquier elemento HTML que desees, pero es importante que el contenido de la sección sea relevante para el contenido principal de la página web.

<figure>
La etiqueta HTML <figure> se utiliza para etiquetar un elemento de contenido que es independiente del contenido principal de una página web, como una imagen o una tabla. La etiqueta <figure> puede contener cualquier elemento HTML, pero se suele utilizar para contener imágenes, tablas, o diagramas.

La etiqueta <figure> tiene dos atributos principales:

caption: Este atributo se utiliza para establecer una leyenda para la figura. La leyenda se muestra debajo de la figura. align: Este atributo se utiliza para alinear la figura horizontalmente. Los valores posibles son left, center y right. Aquí hay un ejemplo de una figura HTML simple:

<figure>
  <img src="image.jpg" alt="Imagen de la figura">
  <figcaption>Esta es la leyenda de la figura</figcaption>
</figure>

Esta figura contiene una imagen y una leyenda. La imagen se muestra en la parte superior de la figura y la leyenda se muestra debajo de la imagen.

Puedes usar la etiqueta <figure> para crear figuras personalizadas para tus páginas web. Las figuras pueden contener cualquier elemento HTML que desees, pero es importante que el contenido de la figura sea independiente del contenido principal de la página web.

Cheatsheet
cheatsheet